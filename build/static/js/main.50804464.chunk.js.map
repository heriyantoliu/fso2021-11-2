{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","value","onChange","PersonForm","props","onSubmit","addPerson","newName","nameChange","newNumber","numberChange","type","Persons","persons","onDelete","map","person","name","number","onClick","Notification","message","text","className","class","App","useState","setPersons","setNewName","setNewNumber","filterName","setFilterName","setMessage","useEffect","personService","filteredPersons","filter","toLowerCase","includes","event","target","preventDefault","foundPerson","find","window","confirm","updatedPerson","newPerson","length","concat","setTimeout","catch","error","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50804464.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.nameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.numberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons, onDelete }) => {\r\n  return persons.map((person) => (\r\n    <div key={person.id}>\r\n      {person.name} {person.number}\r\n      <button onClick={() => onDelete(person.id)}>delete</button>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Persons;\r\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\n\nconst Notification = ({ message }) => {\n  if (message.text === null) {\n    return null;\n  }\n\n  return <div className={message.class}>{message.text}</div>;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [message, setMessage] = useState({ text: null, class: \"\" });\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response);\n    });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    let foundPerson = persons.find((person) => person.name === newName);\n    if (foundPerson) {\n      const result = window.confirm(\n        `${foundPerson.name} is already added to phonebook, replace the old number with the new one ?`\n      );\n      if (!result) {\n        return;\n      }\n      const updatedPerson = { ...foundPerson, number: newNumber };\n      personService.update(foundPerson.id, updatedPerson).then((response) => {\n        setPersons(\n          persons.map((person) =>\n            person.id !== foundPerson.id ? person : updatedPerson\n          )\n        );\n      });\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1,\n      };\n      personService\n        .create(newPerson)\n        .then((response) => {\n          setPersons(persons.concat(response));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setMessage({ text: `Added ${newName}`, class: \"success\" });\n          setTimeout(() => {\n            setMessage({ text: null, class: \"\" });\n          }, 5000);\n        })\n        .catch((error) => {\n          setMessage({\n            text: `Added ${error.response.data.error}`,\n            class: \"error\",\n          });\n          setTimeout(() => {\n            setMessage({ text: null, class: \"\" });\n          }, 5000);\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterNameChange = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeletePerson = (id) => {\n    const deletePerson = persons.find((person) => person.id === id);\n    const result = window.confirm(`Delete ${deletePerson.name} ?`);\n    if (result) {\n      personService\n        .remove(id)\n        .then((response) => {\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .catch((error) => {\n          setPersons(persons.filter((person) => person.id !== id));\n          setMessage({\n            text: `Information of ${deletePerson.name} has already been removed from server`,\n            class: \"error\",\n          });\n          setTimeout(() => {\n            setMessage({ text: null, class: \"\" });\n          }, 5000);\n        });\n    }\n  };\n\n  const filteredPersons = filterName\n    ? persons.filter((person) => {\n        let name = person.name.toLowerCase();\n        return name.includes(filterName.toLowerCase());\n      })\n    : persons;\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter value={filterName} onChange={handleFilterNameChange} />\n\n      <h2>add a new </h2>\n\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        nameChange={handleNameChange}\n        newNumber={newNumber}\n        numberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} onDelete={handleDeletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}